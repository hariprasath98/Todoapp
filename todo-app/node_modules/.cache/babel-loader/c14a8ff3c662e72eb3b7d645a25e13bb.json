{"ast":null,"code":"var _jsxFileName = \"D:\\\\reactor\\\\todo\\\\src\\\\NewTodoForm.js\";\nimport React, { useState, useReducer } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport uuid from \"uuid\";\nimport \"./newTodoForm.css\";\n\nfunction NewTodoForm({\n  task,\n  createTodo\n}) {\n  const [userInput, setUserInput] = useReducer((state, newState) => ({ ...state,\n    ...newState\n  }), {\n    task: \"\"\n  });\n\n  const handleChange = evt => {\n    setUserInput({\n      [evt.target.name]: evt.target.value\n    });\n  };\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    const newTodo = {\n      id: uuid(),\n      task: userInput.task,\n      completed: false\n    };\n    createTodo(newTodo);\n    setUserInput({\n      task: \"\"\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    className: \"NewTodoForm\",\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"task\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, \"New todo\"), /*#__PURE__*/React.createElement(\"input\", {\n    value: userInput.task,\n    onChange: handleChange,\n    id: \"task\",\n    type: \"text\",\n    name: \"task\",\n    placeholder: \"New Todo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, \"Add Todo\"));\n}\n\nexport default NewTodoForm;","map":{"version":3,"sources":["D:/reactor/todo/src/NewTodoForm.js"],"names":["React","useState","useReducer","ReactDOM","uuid","NewTodoForm","task","createTodo","userInput","setUserInput","state","newState","handleChange","evt","target","name","value","handleSubmit","preventDefault","newTodo","id","completed"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,OAA5C;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAO,mBAAP;;AAEA,SAASC,WAAT,CAAqB;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAArB,EAA2C;AACzC,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BP,UAAU,CAC1C,CAACQ,KAAD,EAAQC,QAAR,MAAsB,EAAE,GAAGD,KAAL;AAAY,OAAGC;AAAf,GAAtB,CAD0C,EAE1C;AACEL,IAAAA,IAAI,EAAE;AADR,GAF0C,CAA5C;;AAOA,QAAMM,YAAY,GAAGC,GAAG,IAAI;AAC1BJ,IAAAA,YAAY,CAAC;AAAE,OAACI,GAAG,CAACC,MAAJ,CAAWC,IAAZ,GAAmBF,GAAG,CAACC,MAAJ,CAAWE;AAAhC,KAAD,CAAZ;AACD,GAFD;;AAIA,QAAMC,YAAY,GAAGJ,GAAG,IAAI;AAC1BA,IAAAA,GAAG,CAACK,cAAJ;AACA,UAAMC,OAAO,GAAG;AAAEC,MAAAA,EAAE,EAAEhB,IAAI,EAAV;AAAcE,MAAAA,IAAI,EAAEE,SAAS,CAACF,IAA9B;AAAoCe,MAAAA,SAAS,EAAE;AAA/C,KAAhB;AACAd,IAAAA,UAAU,CAACY,OAAD,CAAV;AACAV,IAAAA,YAAY,CAAC;AAAEH,MAAAA,IAAI,EAAE;AAAR,KAAD,CAAZ;AACD,GALD;;AAOA,sBACE;AAAM,IAAA,SAAS,EAAC,aAAhB;AAA8B,IAAA,QAAQ,EAAEW,YAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AACE,IAAA,KAAK,EAAET,SAAS,CAACF,IADnB;AAEE,IAAA,QAAQ,EAAEM,YAFZ;AAGE,IAAA,EAAE,EAAC,MAHL;AAIE,IAAA,IAAI,EAAC,MAJP;AAKE,IAAA,IAAI,EAAC,MALP;AAME,IAAA,WAAW,EAAC,UANd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAVF,CADF;AAcD;;AAED,eAAeP,WAAf","sourcesContent":["import React, { useState, useReducer } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport uuid from \"uuid\";\r\nimport \"./newTodoForm.css\";\r\n\r\nfunction NewTodoForm({ task, createTodo }) {\r\n  const [userInput, setUserInput] = useReducer(\r\n    (state, newState) => ({ ...state, ...newState }),\r\n    {\r\n      task: \"\"\r\n    }\r\n  );\r\n\r\n  const handleChange = evt => {\r\n    setUserInput({ [evt.target.name]: evt.target.value });\r\n  };\r\n\r\n  const handleSubmit = evt => {\r\n    evt.preventDefault();\r\n    const newTodo = { id: uuid(), task: userInput.task, completed: false };\r\n    createTodo(newTodo);\r\n    setUserInput({ task: \"\" });\r\n  };\r\n\r\n  return (\r\n    <form className=\"NewTodoForm\" onSubmit={handleSubmit}>\r\n      <label htmlFor=\"task\">New todo</label>\r\n      <input\r\n        value={userInput.task}\r\n        onChange={handleChange}\r\n        id=\"task\"\r\n        type=\"text\"\r\n        name=\"task\"\r\n        placeholder=\"New Todo\"\r\n      />\r\n      <button>Add Todo</button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default NewTodoForm;\r\n"]},"metadata":{},"sourceType":"module"}