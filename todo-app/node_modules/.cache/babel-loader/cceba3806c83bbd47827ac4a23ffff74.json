{"ast":null,"code":"var _jsxFileName = \"D:\\\\reactor\\\\todo\\\\src\\\\Todo.js\";\nimport React, { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./Todo.css\";\n\nfunction Todo({\n  todo,\n  remove,\n  update,\n  toggleComplete\n}) {\n  const [isEditing, setIsEditing] = useState(false);\n  const [task, setTask] = useState(todo.task);\n\n  const handleClick = evt => {\n    remove(evt.target.id);\n  };\n\n  const toggleFrom = () => {\n    setIsEditing(!isEditing);\n  };\n\n  const handleUpdate = evt => {\n    evt.preventDefault();\n    update(todo.id, task);\n    toggleFrom();\n  };\n\n  const handleChange = evt => {\n    setTask(evt.target.value);\n  };\n\n  const toggleCompleted = evt => {\n    toggleComplete(evt.target.id);\n  };\n\n  let result;\n\n  if (isEditing) {\n    result = /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Todo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      className: \"Todo-edit-form\",\n      onSubmit: handleUpdate,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      onChange: handleChange,\n      value: task,\n      type: \"text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }\n    }, \"Save\")));\n  } else {\n    result = /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Todo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      id: todo.id,\n      onClick: toggleCompleted,\n      className: todo.completed ? \"Todo-task completed\" : \"Todo-task\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }\n    }, todo.task), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Todo-buttons\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: toggleFrom,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fas fa-pen\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: handleClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      id: todo.id,\n      className: \"fas fa-trash\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }\n    }))));\n  }\n\n  return result;\n}\n\nexport default Todo;","map":{"version":3,"sources":["D:/reactor/todo/src/Todo.js"],"names":["React","useState","ReactDOM","Todo","todo","remove","update","toggleComplete","isEditing","setIsEditing","task","setTask","handleClick","evt","target","id","toggleFrom","handleUpdate","preventDefault","handleChange","value","toggleCompleted","result","completed"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,YAAP;;AAEA,SAASC,IAAT,CAAc;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,MAAR;AAAgBC,EAAAA,MAAhB;AAAwBC,EAAAA;AAAxB,CAAd,EAAwD;AACtD,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACS,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAACG,IAAI,CAACM,IAAN,CAAhC;;AAEA,QAAME,WAAW,GAAGC,GAAG,IAAI;AACzBR,IAAAA,MAAM,CAACQ,GAAG,CAACC,MAAJ,CAAWC,EAAZ,CAAN;AACD,GAFD;;AAGA,QAAMC,UAAU,GAAG,MAAM;AACvBP,IAAAA,YAAY,CAAC,CAACD,SAAF,CAAZ;AACD,GAFD;;AAGA,QAAMS,YAAY,GAAGJ,GAAG,IAAI;AAC1BA,IAAAA,GAAG,CAACK,cAAJ;AACAZ,IAAAA,MAAM,CAACF,IAAI,CAACW,EAAN,EAAUL,IAAV,CAAN;AACAM,IAAAA,UAAU;AACX,GAJD;;AAKA,QAAMG,YAAY,GAAGN,GAAG,IAAI;AAC1BF,IAAAA,OAAO,CAACE,GAAG,CAACC,MAAJ,CAAWM,KAAZ,CAAP;AACD,GAFD;;AAGA,QAAMC,eAAe,GAAGR,GAAG,IAAI;AAC7BN,IAAAA,cAAc,CAACM,GAAG,CAACC,MAAJ,CAAWC,EAAZ,CAAd;AACD,GAFD;;AAIA,MAAIO,MAAJ;;AACA,MAAId,SAAJ,EAAe;AACbc,IAAAA,MAAM,gBACJ;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAM,MAAA,SAAS,EAAC,gBAAhB;AAAiC,MAAA,QAAQ,EAAEL,YAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAO,MAAA,QAAQ,EAAEE,YAAjB;AAA+B,MAAA,KAAK,EAAET,IAAtC;AAA4C,MAAA,IAAI,EAAC,MAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,CADF,CADF;AAQD,GATD,MASO;AACLY,IAAAA,MAAM,gBACJ;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AACE,MAAA,EAAE,EAAElB,IAAI,CAACW,EADX;AAEE,MAAA,OAAO,EAAEM,eAFX;AAGE,MAAA,SAAS,EAAEjB,IAAI,CAACmB,SAAL,GAAiB,qBAAjB,GAAyC,WAHtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKGnB,IAAI,CAACM,IALR,CADF,eAQE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAQ,MAAA,OAAO,EAAEM,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAG,MAAA,SAAS,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,eAIE;AAAQ,MAAA,OAAO,EAAEJ,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAG,MAAA,EAAE,EAAER,IAAI,CAACW,EAAZ;AAAgB,MAAA,SAAS,EAAC,cAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAJF,CARF,CADF;AAmBD;;AACD,SAAOO,MAAP;AACD;;AAED,eAAenB,IAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./Todo.css\";\r\n\r\nfunction Todo({ todo, remove, update, toggleComplete }) {\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const [task, setTask] = useState(todo.task);\r\n\r\n  const handleClick = evt => {\r\n    remove(evt.target.id);\r\n  };\r\n  const toggleFrom = () => {\r\n    setIsEditing(!isEditing);\r\n  };\r\n  const handleUpdate = evt => {\r\n    evt.preventDefault();\r\n    update(todo.id, task);\r\n    toggleFrom();\r\n  };\r\n  const handleChange = evt => {\r\n    setTask(evt.target.value);\r\n  };\r\n  const toggleCompleted = evt => {\r\n    toggleComplete(evt.target.id);\r\n  };\r\n\r\n  let result;\r\n  if (isEditing) {\r\n    result = (\r\n      <div className=\"Todo\">\r\n        <form className=\"Todo-edit-form\" onSubmit={handleUpdate}>\r\n          <input onChange={handleChange} value={task} type=\"text\" />\r\n          <button>Save</button>\r\n        </form>\r\n      </div>\r\n    );\r\n  } else {\r\n    result = (\r\n      <div className=\"Todo\">\r\n        <li\r\n          id={todo.id}\r\n          onClick={toggleCompleted}\r\n          className={todo.completed ? \"Todo-task completed\" : \"Todo-task\"}\r\n        >\r\n          {todo.task}\r\n        </li>\r\n        <div className=\"Todo-buttons\">\r\n          <button onClick={toggleFrom}>\r\n            <i className=\"fas fa-pen\" />\r\n          </button>\r\n          <button onClick={handleClick}>\r\n            <i id={todo.id} className=\"fas fa-trash\" />\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  return result;\r\n}\r\n\r\nexport default Todo;\r\n"]},"metadata":{},"sourceType":"module"}