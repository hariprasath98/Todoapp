{"ast":null,"code":"var _jsxFileName = \"D:\\\\reactor\\\\todo\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport TodoItem from './components/TodoItem.js';\nimport TodoForm from './components/TodoForm.js';\n\nclass TodoList extends React.Component {\n  constructor() {\n    super();\n    this.changeStatus = this.changeStatus.bind(this);\n    this.updateTask = this.updateTask.bind(this);\n    this.addTask = this.addTask.bind(this);\n    this.deleteTask = this.deleteTask.bind(this);\n    this.editTask = this.editTask.bind(this);\n    this.state = {\n      tasks: [{\n        name: \"Buy Milk\",\n        completed: false\n      }, {\n        name: \"Buy Cheese\",\n        completed: false\n      }, {\n        name: \"Buy Bread\",\n        completed: false\n      }],\n      currentTask: ''\n    };\n  }\n\n  deleteTask(index) {\n    console.log(index);\n    let tasks = this.state.tasks;\n    tasks.splice(index, 1);\n    this.setState({\n      tasks\n    });\n  }\n\n  addTask(evt) {\n    evt.preventDefault();\n    let tasks = this.state.tasks;\n    let currentTask = this.state.currentTask;\n    tasks.push({\n      name: currentTask,\n      completed: false\n    });\n    this.setState({\n      tasks,\n      currentTask: ''\n    });\n  }\n\n  updateTask(newValue) {\n    this.setState({\n      currentTask: newValue.target.value\n    });\n  }\n\n  editTask(index, newValue) {\n    var tasks = this.state.tasks;\n    var task = tasks[index];\n    task['name'] = newValue;\n    this.setState({\n      tasks\n    });\n  }\n\n  changeStatus(index) {\n    var tasks = this.state.tasks;\n    var task = tasks[index];\n    task.completed = !task.completed;\n    this.setState({\n      tasks: tasks\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"section\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(TodoForm, {\n      currentTask: this.state.currentTask,\n      updateTask: this.updateTask,\n      addTask: this.addTask,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 8\n      }\n    }), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }\n    }, this.state.tasks.map((task, index) => {\n      return /*#__PURE__*/React.createElement(TodoItem, {\n        key: index,\n        clickHandler: this.changeStatus,\n        index: index,\n        deleteTask: this.deleteTask,\n        editTask: this.editTask,\n        details: task,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 20\n        }\n      });\n    })));\n  }\n\n}\n\nReactDOM.render( /*#__PURE__*/React.createElement(TodoList, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 17\n  }\n}), document.getElementById('root'));","map":{"version":3,"sources":["D:/reactor/todo/src/index.js"],"names":["React","ReactDOM","TodoItem","TodoForm","TodoList","Component","constructor","changeStatus","bind","updateTask","addTask","deleteTask","editTask","state","tasks","name","completed","currentTask","index","console","log","splice","setState","evt","preventDefault","push","newValue","target","value","task","render","map","document","getElementById"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom'\nimport './index.css';\nimport TodoItem from './components/TodoItem.js';\nimport TodoForm from './components/TodoForm.js';\n\nclass TodoList extends React.Component {\n  constructor(){\n    super();\n    this.changeStatus = this.changeStatus.bind(this);\n    this.updateTask = this.updateTask.bind(this);\n    this.addTask = this.addTask.bind(this);\n    this.deleteTask = this.deleteTask.bind(this);\n    this.editTask = this.editTask.bind(this);\n    this.state = {\n      tasks:[{\n        name:\"Buy Milk\",\n        completed:false\n      },\n      {\n        name:\"Buy Cheese\",\n        completed:false\n      },\n      {\n        name:\"Buy Bread\",\n        completed:false\n      }],\n      currentTask:'' \n    }\n }\ndeleteTask(index){\n  console.log(index)\n\n  let tasks = this.state.tasks;\n  tasks.splice(index,1);\n\n  this.setState({\n    tasks\n  })\n  \n}\naddTask(evt){\n  evt.preventDefault();\n  let tasks = this.state.tasks;\n  let currentTask = this.state.currentTask;\n  tasks.push({\n    name:currentTask,\n    completed:false\n  })\n\n  this.setState({\n    tasks,\n    currentTask:'' \n  })\n\n\n}\nupdateTask(newValue){\n  this.setState({\n    currentTask:newValue.target.value\n  })\n}\n\neditTask(index, newValue){\n var tasks = this.state.tasks;\n var task = tasks[index];\n task['name'] = newValue;\n this.setState({\n  tasks\n })\n}\n\n\nchangeStatus(index){\n var tasks = this.state.tasks;\n var task = tasks[index];\n task.completed = !task.completed;\n this.setState({\n   tasks:tasks\n })\n}\n render() {\n    return (\n      <section>\n       <TodoForm \n            currentTask={this.state.currentTask}\n            updateTask={this.updateTask}\n            addTask={this.addTask}\n        />\n        <ul>\n        {\n          this.state.tasks.map((task, index) => {\n            return <TodoItem \n                    key={index} \n                    clickHandler={this.changeStatus} \n                    index={index} \n                    deleteTask={this.deleteTask}\n                    editTask={this.editTask}\n                    details={task}\n                     />\n          })\n        }\n          \n        </ul>\n      </section>\n    )\n  }\n}\n\n\n\nReactDOM.render(<TodoList />,document.getElementById('root'))"]},"metadata":{},"sourceType":"module"}